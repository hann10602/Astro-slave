---
type Props = {

}

type TUser = {
    id: string
    firstName: string
    lastName: string
    maidenName: string
    age: string
    gender: string
}

// export const getStaticPaths = (({paginate}) => {
//     const astronautPages: AstronautProps[] = [{
//         astronaut: "first page"
//     },{
//         astronaut: "second page"
//     },{
//         astronaut: "third page"
//     },{
//         astronaut: "fourth page"
//     },]

//     return paginate(astronautPages, {pageSize: 2})
// }) satisfies GetStaticPaths;

export async function getStaticPaths({ paginate }:any) {
  const allIds = [1, 2, 3, 4];

    const promises = allIds.map(id => {
        console.log("alo: " + id)
        return fetch(`https://dummyjson.com/users/${id}`).then(res => res.json())}
    )

  const data = await Promise.all(promises)

  return paginate(data, { pageSize: 2 });
}

// const { user }: any = Astro.params
const { page }: any = Astro.props
---
<div>
        <h1>ChungBT</h1>
    <h1>Page {page.currentPage}</h1>
    <ul>{(page.data as TUser[]).map(item => <>
    <li>id: {item.id}</li>
    <li>firstName: {item.firstName}</li>
    <li>lastName: {item.lastName}</li>
    <li>maidenName: {item.maidenName}</li>
    <li>age: {item.age}</li>
    <li>gender: {item.gender}</li></>)}</ul>
</div>

<style>

</style>

<script></script>
